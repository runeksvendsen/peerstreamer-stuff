diff -u a/src/video/x11/SDL_x11dyn.c b/src/video/x11/SDL_x11dyn.c
--- a/src/video/x11/SDL_x11dyn.c	2010-04-12 07:25:17.000000000 +0200
+++ b/src/video/x11/SDL_x11dyn.c	2012-07-02 14:33:58.000000000 +0200
@@ -109,6 +109,21 @@
 #undef SDL_X11_SYM
 
 
+static void *SDL_XGetRequest_workaround(Display* dpy, CARD8 type, size_t len)
+{
+   xReq *req;
+   WORD64ALIGN
+   if (dpy->bufptr + len > dpy->bufmax)
+       _XFlush(dpy);
+   dpy->last_req = dpy->bufptr;
+   req = (xReq*)dpy->bufptr;
+   req->reqType = type;
+   req->length = len / 4;
+   dpy->bufptr += len;
+   dpy->request++;
+   return req;
+}
+
 static int x11_load_refcount = 0;
 
 void SDL_X11_UnloadSymbols(void)
@@ -168,6 +183,15 @@
 		X11_GetSym("XGetICValues",&SDL_X11_HAVE_UTF8,(void **)&pXGetICValues);
 		#endif
 
+      /*
+      * In case we're built with newer Xlib headers, we need to make sure
+      *  that _XGetRequest() is available, even on older systems.
+      *  Otherwise, various Xlib macros we use will call a NULL pointer.
+      */
+      if (!SDL_X11_HAVE_XGETREQUEST) {
+          p_XGetRequest = SDL_XGetRequest_workaround;
+      }
+
 		if (SDL_X11_HAVE_BASEXLIB) {  /* all required symbols loaded. */
 			SDL_ClearError();
 		} else {
diff -u a/src/video/x11/SDL_x11sym.h b/src/video/x11/SDL_x11sym.h
--- a/src/video/x11/SDL_x11sym.h	2010-04-12 07:25:17.000000000 +0200
+++ b/src/video/x11/SDL_x11sym.h	2012-07-02 14:28:40.000000000 +0200
@@ -170,6 +170,12 @@
 #endif
 
 /*
+ * libX11 1.4.99.1 added _XGetRequest, and macros use it behind the scenes.
+ */
+SDL_X11_MODULE(XGETREQUEST)
+SDL_X11_SYM(void *,_XGetRequest,(Display* a,CARD8 b,size_t c),(a,b,c),return)
+
+/*
  * These only show up on some variants of Unix.
  */
 #if defined(__osf__)
